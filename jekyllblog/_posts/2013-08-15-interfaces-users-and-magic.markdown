---
layout: post
title: "Interfaces, Users, and Magic"
date: 2013-08-15 03:29:04
---

So I have been struggling with Jekyll for the past hour or so. As you can see,
my blog lives at [learningvirus.com/blog](http://learningvirus.com/blog).
Unfortunately, Jekyll is is very egocentric &#8210; it wants to be served from
the root, and it uses links relative to the site root for posts. These absolute
links are great from a code flexibility standpoint, since you can move your
files around without worrying about breaking outgoing links, so I can
understand why Jekyll uses them. Unfortunately, when you're serving from a
subdirectory on a server, all of those autogenerated links are wrong. Last
night when deploying I had to use some `sed` magic to get things to work
properly.

Today, I was Googling around for the "right" way to fix this issue, and I found
the baseurl config option. I set the config to "/blog/" (since the default was
"/") and rebuilt the site. To my surprise, the links generated from `post.url`
were unchanged. Since these links are autogenerated and the site now has
knowledge of where the site root is relative to its own directory, I expected
it to create working links. However, the links were still relative only to the
root.  I'll describe the fix I used for the blog below, but I want to touch on
something more general first.

There is a rule known as "The Principle of Least Astonishment" (aka "The
Principle of Least Surprise", which I prefer) which says that the user of an
interface should be surprised as little as possible when using that interface.
When a user sees the variable `post.url` they expect its value to be the URL of
`post` and nothing less or more. Whenever we're designing interfaces, it's
important to strike the crucial balance between power and ease-of-use, and
unsurprising interfaces tend to be the easiest to use.

![Python uses this primciple](http://i.imgur.com/kUEoNMp.png)
Python uses this principle in its design. (Aside: I need to implement captions)

There is another, closely-related dichotomy which programmers struggle with on
a daily basis: the struggle of magic versus transparency. Some of the most
talented programmers I know (and I know some of the best) abhor frameworks and
libraries that use too much "magic". "Magic" in this context means that a lot
of things are done for you in the background and you aren't exposed to the
inner workings of the system. Usually, this is a good thing &#8210; we couldn't
program without layers upon layers of abstraction &#8210; but I've noticed that
the best programmers have an innate curiosity that won't let them be content if
they don't know what's going on under the hood. In a way, abstraction is a form
of trust, we can think of something very high level like rendering a webpage as
a black box because we know it's always worked reliably for years. When using a
new library, we can (and should) let ourselves be wary of its inner workings
until they've proven themselves or we understand what's going on. There's also
another dimension to this argument (simplicity vs. complexity), but I think
I've rambled enough for now.

![Magic!](http://i.imgur.com/JviLNuR.png)

How I fixed the blog:
So as it turns out, config's baseurl is really only for the dev server, which I
found out when I read [this discussion](https://github.com/mojombo/jekyll/issues/51)
on Github. For the actual fix, I have to thank Andrew Shell, who talks about it
in his [blog](http://blog.andrewshell.org/understanding-baseurl/) and points to
some [code](https://github.com/andrewshell/baseurltest) he wrote which does what
we want. Also during my investigation I learned about Octopress. I had heard
about Octopress before, but I learned that it was built on top of Jekyll when I
saw its warning about using baseurl (surprise, surprise) 
[here](http://octopress.org/docs/configuring/).

From Octopress docs: "Note: Jekyll has a baseurl config which offers mock
subdirectory publishing support by adding a redirect to Jekyll’s WEBrick server.
Please don’t use this. If you want to publish your site to a subdirectory, (see
Deploying Octopress to a Subdirectory)."

Since I'm not in love with Jekyll (and I'm not very tied to it yet) so far and
Octopress seems to have good docs and community support, I'm going to be
exploring in that direction for my next few posts.

![Octopodes typing on typewriters is the future](http://i.imgur.com/P2l3wU7.png)
